buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
    }
}

apply plugin: 'base'
apply plugin: 'com.moowork.node' // gradle-node-plugin

configurations {
    runtime
}

configurations.default.extendsFrom(configurations.runtime)

node {
    /* gradle-node-plugin configuration
       https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md

       Task name pattern:
       ./gradlew npm_<command> Executes an NPM command.
    */

    // Version of node to use.
    version = '10.14.1'

    // Version of npm to use.
    npmVersion = '6.4.1'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
}

npm_run_build {
    inputs.files fileTree("public")
    inputs.files(fileTree("src"))

    inputs.file 'package.json'
    inputs.file 'package-lock.json'

    outputs.dir 'build'
}

// pack output of the build into JAR file
task archive(type: Zip) {
    dependsOn npm_run_build
    baseName 'npm-app'
    extension 'jar'
    destinationDir file("${projectDir}/build_archive")
    from('build') {
        // optional path under which output will be visible in Java classpath, e.g. static resources path
        into 'static' 
    }
}

// expose the artifact created by the ZIP task - this a crucial part
artifacts {
    runtime(archive.archivePath) {
        builtBy archive
        type "jar"
    }
}

assemble.dependsOn archive

clean {
    delete archive.destinationDir
}
